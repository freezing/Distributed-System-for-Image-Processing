package tutorial;

option java_package = "protos";
option java_outer_classname = "KademliaProtos";

message KademliaId {
	optional bytes data = 1;
}

message KademliaNode {
	optional KademliaId id = 1;
	optional string address = 2;
	optional int32 port = 3;
}

// Requests and Responses
message MessageContainer {
	optional int32 type = 1;
	optional bytes data = 2;
	optional KademliaNode sender = 3;
}

message BootstrapConnectRequest {
	optional int32 port = 1;
}

message BootstrapConnectResponse {
	optional KademliaNode you = 1;
	repeated KademliaNode others = 2;
}

message FindNodeRequest {
	optional KademliaId searchId = 1;
}

message FindNodeResponse {
	optional KademliaId searchId = 1;
	repeated KademliaNode results = 2;
}

message FindValueRequest {
	optional KademliaId searchId = 1;
}

message FindValueResponse {
	optional KademliaId searchId = 1;
	optional HashTableValue valueResult = 2;
	repeated KademliaNode results = 3;
}

message StoreRequest {
	optional KademliaId key = 1;
	optional HashTableValue value = 2;
}

message StoreResponse {
	optional string status = 1;
}

message HashTableValue {
	optional SegmentTreeNode segmentTreeNode = 1;
	optional ImageTask unitTask = 2;
	optional TaskResult result = 3;
	optional int64 lastTimeTaken = 4;
	optional int32 finishedTasks = 5;
	optional int32 validTasks = 6;
	optional string tmp = 10;
}

message BlurImageRequest {
	optional ImageProto imageProto = 1;
	optional int32 radius = 2;
}

message BlurImageResponse {
	optional ImageProto image = 1;
}

message Pixel {
	optional int32 red = 1;
	optional int32 green = 2;
	optional int32 blue = 3;
}

message ImageRow {
	repeated Pixel pixels = 1;
}

message ImageProto {
	optional int32 height = 1;
	optional int32 width = 2;
	repeated ImageRow rows = 3;
}

message BlurArea {
	optional int32 top = 1;
	optional int32 left = 2;
	optional int32 bottom = 3;
	optional int32 right = 4;
}

message ImageTask {
	optional ImageProto subImage = 1;
	optional BlurArea blurArea = 2;
	optional int32 radius = 3;
	optional bool fake = 4;
}

message TaskResult {
	optional ImageProto bluredImage = 1;
}

// Segment Tree
message SegmentTreeNode {
	optional KademliaId leftChildId = 1;
	optional KademliaId rightChildId = 2;
	optional KademliaId parentId = 3;
	optional KademliaId myId = 4;
}
